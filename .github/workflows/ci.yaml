
# Github action for releasing the binaries
name: Acceptance Tests

on:
  pull_request_target:
    branches:
      - master
  push:
    branches:
      - master
  workflow_dispatch:
    

jobs:
  Check:
    environment: us-east-2
    runs-on: ubuntu-latest
    steps:
      # Retrieve the code from the repo (UNSAFE)
      - uses: actions/checkout@v2
        with:
            repository: ${{ github.event.pull_request.head.repo.full_name }}
            ref: ${{ github.event.pull_request.head.ref }}
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
      - name: Build
        run: make build
      - name: Check
        run: make check
      - name: Test
        run: make test
  Acceptances_tests:
    environment: us-east-2
    needs: Check
    runs-on: [self-hosted, linux]
    steps:
      # Retrieve the code from the repo (UNSAFE)
      - uses: actions/checkout@v2
        with:
            repository: ${{ github.event.pull_request.head.repo.full_name }}
            ref: ${{ github.event.pull_request.head.ref }}
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
      - uses: actions/setup-python@v2
      - name: Install osc-cli
        run: pip install osc-sdk
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
      - name: Install BATS
        run: |
          git clone https://github.com/bats-core/bats-core.git
          cd bats-core
          ./install.sh /usr/local
      - name: Install docker-machine
        run: |
          curl -L https://github.com/docker/machine/releases/download/v0.16.2/docker-machine-`uname -s`-`uname -m` >/tmp/docker-machine 
          chmod +x /tmp/docker-machine 
          sudo cp /tmp/docker-machine /usr/local/bin/docker-machine
      - name: Run acceptance tests
        run: make testacc
        env:
          OSC_ACCESS_KEY: ${{ secrets.OSC_ACCESS_KEY }}
          OSC_SECRET_KEY: ${{ secrets.OSC_SECRET_KEY }}
          OSC_REGION: ${{ secrets.OSC_REGION }}
          OUTSCALE_SOURCE_OMI: ${{ secrets.OMI_ID }}
